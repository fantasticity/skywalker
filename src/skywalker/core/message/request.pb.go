// Code generated by protoc-gen-go.
// source: src/skywalker/core/message/request.proto
// DO NOT EDIT!

package message

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type RequestType int32

const (
	RequestType_LIST_RELAY RequestType = 1
)

var RequestType_name = map[int32]string{
	1: "LIST_RELAY",
}
var RequestType_value = map[string]int32{
	"LIST_RELAY": 1,
}

func (x RequestType) Enum() *RequestType {
	p := new(RequestType)
	*p = x
	return p
}
func (x RequestType) String() string {
	return proto.EnumName(RequestType_name, int32(x))
}
func (x *RequestType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(RequestType_value, data, "RequestType")
	if err != nil {
		return err
	}
	*x = RequestType(value)
	return nil
}
func (RequestType) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

type Request struct {
	Type             *RequestType `protobuf:"varint,1,req,name=type,enum=message.RequestType" json:"type,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Request) Reset()                    { *m = Request{} }
func (m *Request) String() string            { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()               {}
func (*Request) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *Request) GetType() RequestType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return RequestType_LIST_RELAY
}

func init() {
	proto.RegisterType((*Request)(nil), "message.Request")
	proto.RegisterEnum("message.RequestType", RequestType_name, RequestType_value)
}

func init() { proto.RegisterFile("src/skywalker/core/message/request.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 123 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xd2, 0x28, 0x2e, 0x4a, 0xd6,
	0x2f, 0xce, 0xae, 0x2c, 0x4f, 0xcc, 0xc9, 0x4e, 0x2d, 0xd2, 0x4f, 0xce, 0x2f, 0x4a, 0xd5, 0xcf,
	0x4d, 0x2d, 0x2e, 0x4e, 0x4c, 0x4f, 0xd5, 0x2f, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0xd1, 0x2b,
	0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x87, 0x0a, 0x2b, 0xe9, 0x72, 0xb1, 0x07, 0x41, 0x64, 0x84,
	0x94, 0xb8, 0x58, 0x4a, 0x2a, 0x0b, 0x52, 0x25, 0x18, 0x15, 0x98, 0x34, 0xf8, 0x8c, 0x44, 0xf4,
	0xa0, 0x4a, 0xf4, 0xa0, 0xf2, 0x21, 0x40, 0x39, 0x2d, 0x59, 0x2e, 0x6e, 0x24, 0xae, 0x10, 0x1f,
	0x17, 0x97, 0x8f, 0x67, 0x70, 0x48, 0x7c, 0x90, 0xab, 0x8f, 0x63, 0xa4, 0x00, 0x23, 0x20, 0x00,
	0x00, 0xff, 0xff, 0x5f, 0x23, 0xf7, 0x02, 0x81, 0x00, 0x00, 0x00,
}
