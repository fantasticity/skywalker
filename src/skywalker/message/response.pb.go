// Code generated by protoc-gen-go.
// source: src/skywalker/message/response.proto
// DO NOT EDIT!

package message

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type StatusResponse_Status int32

const (
	StatusResponse_STOPPED StatusResponse_Status = 1
	StatusResponse_RUNNING StatusResponse_Status = 2
	StatusResponse_ERROR   StatusResponse_Status = 3
)

var StatusResponse_Status_name = map[int32]string{
	1: "STOPPED",
	2: "RUNNING",
	3: "ERROR",
}
var StatusResponse_Status_value = map[string]int32{
	"STOPPED": 1,
	"RUNNING": 2,
	"ERROR":   3,
}

func (x StatusResponse_Status) Enum() *StatusResponse_Status {
	p := new(StatusResponse_Status)
	*p = x
	return p
}
func (x StatusResponse_Status) String() string {
	return proto.EnumName(StatusResponse_Status_name, int32(x))
}
func (x *StatusResponse_Status) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(StatusResponse_Status_value, data, "StatusResponse_Status")
	if err != nil {
		return err
	}
	*x = StatusResponse_Status(value)
	return nil
}
func (StatusResponse_Status) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{1, 0} }

type StartResponse_Status int32

const (
	StartResponse_STARTED StartResponse_Status = 1
	StartResponse_ERROR   StartResponse_Status = 2
	StartResponse_RUNNING StartResponse_Status = 3
)

var StartResponse_Status_name = map[int32]string{
	1: "STARTED",
	2: "ERROR",
	3: "RUNNING",
}
var StartResponse_Status_value = map[string]int32{
	"STARTED": 1,
	"ERROR":   2,
	"RUNNING": 3,
}

func (x StartResponse_Status) Enum() *StartResponse_Status {
	p := new(StartResponse_Status)
	*p = x
	return p
}
func (x StartResponse_Status) String() string {
	return proto.EnumName(StartResponse_Status_name, int32(x))
}
func (x *StartResponse_Status) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(StartResponse_Status_value, data, "StartResponse_Status")
	if err != nil {
		return err
	}
	*x = StartResponse_Status(value)
	return nil
}
func (StartResponse_Status) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{2, 0} }

type StopResponse_Status int32

const (
	StopResponse_STOPPED   StopResponse_Status = 1
	StopResponse_ERROR     StopResponse_Status = 2
	StopResponse_UNRUNNING StopResponse_Status = 3
)

var StopResponse_Status_name = map[int32]string{
	1: "STOPPED",
	2: "ERROR",
	3: "UNRUNNING",
}
var StopResponse_Status_value = map[string]int32{
	"STOPPED":   1,
	"ERROR":     2,
	"UNRUNNING": 3,
}

func (x StopResponse_Status) Enum() *StopResponse_Status {
	p := new(StopResponse_Status)
	*p = x
	return p
}
func (x StopResponse_Status) String() string {
	return proto.EnumName(StopResponse_Status_name, int32(x))
}
func (x *StopResponse_Status) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(StopResponse_Status_value, data, "StopResponse_Status")
	if err != nil {
		return err
	}
	*x = StopResponse_Status(value)
	return nil
}
func (StopResponse_Status) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{3, 0} }

type InfoResponse_Status int32

const (
	InfoResponse_STOPPED InfoResponse_Status = 1
	InfoResponse_RUNNING InfoResponse_Status = 2
	InfoResponse_ERROR   InfoResponse_Status = 3
)

var InfoResponse_Status_name = map[int32]string{
	1: "STOPPED",
	2: "RUNNING",
	3: "ERROR",
}
var InfoResponse_Status_value = map[string]int32{
	"STOPPED": 1,
	"RUNNING": 2,
	"ERROR":   3,
}

func (x InfoResponse_Status) Enum() *InfoResponse_Status {
	p := new(InfoResponse_Status)
	*p = x
	return p
}
func (x InfoResponse_Status) String() string {
	return proto.EnumName(InfoResponse_Status_name, int32(x))
}
func (x *InfoResponse_Status) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(InfoResponse_Status_value, data, "InfoResponse_Status")
	if err != nil {
		return err
	}
	*x = InfoResponse_Status(value)
	return nil
}
func (InfoResponse_Status) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{4, 0} }

// 出错
type Error struct {
	Msg              *string `protobuf:"bytes,1,req,name=msg" json:"msg,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Error) Reset()                    { *m = Error{} }
func (m *Error) String() string            { return proto.CompactTextString(m) }
func (*Error) ProtoMessage()               {}
func (*Error) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *Error) GetMsg() string {
	if m != nil && m.Msg != nil {
		return *m.Msg
	}
	return ""
}

// status 命令的返回结果
type StatusResponse struct {
	Data             []*StatusResponse_Data `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *StatusResponse) Reset()                    { *m = StatusResponse{} }
func (m *StatusResponse) String() string            { return proto.CompactTextString(m) }
func (*StatusResponse) ProtoMessage()               {}
func (*StatusResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *StatusResponse) GetData() []*StatusResponse_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

type StatusResponse_Data struct {
	Name             *string                `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Cname            *string                `protobuf:"bytes,2,req,name=cname" json:"cname,omitempty"`
	Sname            *string                `protobuf:"bytes,3,req,name=sname" json:"sname,omitempty"`
	Status           *StatusResponse_Status `protobuf:"varint,4,req,name=status,enum=message.StatusResponse_Status" json:"status,omitempty"`
	BindAddr         *string                `protobuf:"bytes,5,req,name=bindAddr" json:"bindAddr,omitempty"`
	BindPort         *int32                 `protobuf:"varint,6,req,name=bindPort" json:"bindPort,omitempty"`
	StartTime        *int64                 `protobuf:"varint,7,req,name=startTime" json:"startTime,omitempty"`
	Err              *string                `protobuf:"bytes,8,req,name=err" json:"err,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *StatusResponse_Data) Reset()                    { *m = StatusResponse_Data{} }
func (m *StatusResponse_Data) String() string            { return proto.CompactTextString(m) }
func (*StatusResponse_Data) ProtoMessage()               {}
func (*StatusResponse_Data) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1, 0} }

func (m *StatusResponse_Data) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *StatusResponse_Data) GetCname() string {
	if m != nil && m.Cname != nil {
		return *m.Cname
	}
	return ""
}

func (m *StatusResponse_Data) GetSname() string {
	if m != nil && m.Sname != nil {
		return *m.Sname
	}
	return ""
}

func (m *StatusResponse_Data) GetStatus() StatusResponse_Status {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return StatusResponse_STOPPED
}

func (m *StatusResponse_Data) GetBindAddr() string {
	if m != nil && m.BindAddr != nil {
		return *m.BindAddr
	}
	return ""
}

func (m *StatusResponse_Data) GetBindPort() int32 {
	if m != nil && m.BindPort != nil {
		return *m.BindPort
	}
	return 0
}

func (m *StatusResponse_Data) GetStartTime() int64 {
	if m != nil && m.StartTime != nil {
		return *m.StartTime
	}
	return 0
}

func (m *StatusResponse_Data) GetErr() string {
	if m != nil && m.Err != nil {
		return *m.Err
	}
	return ""
}

// start 命令的返回结果
type StartResponse struct {
	Data             []*StartResponse_Data `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte                `json:"-"`
}

func (m *StartResponse) Reset()                    { *m = StartResponse{} }
func (m *StartResponse) String() string            { return proto.CompactTextString(m) }
func (*StartResponse) ProtoMessage()               {}
func (*StartResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *StartResponse) GetData() []*StartResponse_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

type StartResponse_Data struct {
	Name             *string               `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Status           *StartResponse_Status `protobuf:"varint,2,req,name=status,enum=message.StartResponse_Status" json:"status,omitempty"`
	Err              *string               `protobuf:"bytes,3,req,name=err" json:"err,omitempty"`
	XXX_unrecognized []byte                `json:"-"`
}

func (m *StartResponse_Data) Reset()                    { *m = StartResponse_Data{} }
func (m *StartResponse_Data) String() string            { return proto.CompactTextString(m) }
func (*StartResponse_Data) ProtoMessage()               {}
func (*StartResponse_Data) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2, 0} }

func (m *StartResponse_Data) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *StartResponse_Data) GetStatus() StartResponse_Status {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return StartResponse_STARTED
}

func (m *StartResponse_Data) GetErr() string {
	if m != nil && m.Err != nil {
		return *m.Err
	}
	return ""
}

type StopResponse struct {
	Data             []*StopResponse_Data `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *StopResponse) Reset()                    { *m = StopResponse{} }
func (m *StopResponse) String() string            { return proto.CompactTextString(m) }
func (*StopResponse) ProtoMessage()               {}
func (*StopResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *StopResponse) GetData() []*StopResponse_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

type StopResponse_Data struct {
	Name             *string              `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Status           *StopResponse_Status `protobuf:"varint,2,req,name=status,enum=message.StopResponse_Status" json:"status,omitempty"`
	Err              *string              `protobuf:"bytes,3,req,name=err" json:"err,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *StopResponse_Data) Reset()                    { *m = StopResponse_Data{} }
func (m *StopResponse_Data) String() string            { return proto.CompactTextString(m) }
func (*StopResponse_Data) ProtoMessage()               {}
func (*StopResponse_Data) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3, 0} }

func (m *StopResponse_Data) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *StopResponse_Data) GetStatus() StopResponse_Status {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return StopResponse_STOPPED
}

func (m *StopResponse_Data) GetErr() string {
	if m != nil && m.Err != nil {
		return *m.Err
	}
	return ""
}

type InfoResponse struct {
	Data             []*InfoResponse_Data `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *InfoResponse) Reset()                    { *m = InfoResponse{} }
func (m *InfoResponse) String() string            { return proto.CompactTextString(m) }
func (*InfoResponse) ProtoMessage()               {}
func (*InfoResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func (m *InfoResponse) GetData() []*InfoResponse_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

type InfoResponse_Data struct {
	Name             *string              `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Cname            *string              `protobuf:"bytes,2,req,name=cname" json:"cname,omitempty"`
	Sname            *string              `protobuf:"bytes,3,req,name=sname" json:"sname,omitempty"`
	Status           *InfoResponse_Status `protobuf:"varint,4,req,name=status,enum=message.InfoResponse_Status" json:"status,omitempty"`
	BindAddr         *string              `protobuf:"bytes,5,req,name=bindAddr" json:"bindAddr,omitempty"`
	BindPort         *int32               `protobuf:"varint,6,req,name=bindPort" json:"bindPort,omitempty"`
	StartTime        *int64               `protobuf:"varint,7,req,name=startTime" json:"startTime,omitempty"`
	Sent             *int64               `protobuf:"varint,8,req,name=sent" json:"sent,omitempty"`
	Received         *int64               `protobuf:"varint,9,req,name=received" json:"received,omitempty"`
	SentRate         *int64               `protobuf:"varint,10,req,name=sentRate" json:"sentRate,omitempty"`
	ReceivedRate     *int64               `protobuf:"varint,11,req,name=receivedRate" json:"receivedRate,omitempty"`
	Err              *string              `protobuf:"bytes,12,req,name=err" json:"err,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *InfoResponse_Data) Reset()                    { *m = InfoResponse_Data{} }
func (m *InfoResponse_Data) String() string            { return proto.CompactTextString(m) }
func (*InfoResponse_Data) ProtoMessage()               {}
func (*InfoResponse_Data) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4, 0} }

func (m *InfoResponse_Data) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *InfoResponse_Data) GetCname() string {
	if m != nil && m.Cname != nil {
		return *m.Cname
	}
	return ""
}

func (m *InfoResponse_Data) GetSname() string {
	if m != nil && m.Sname != nil {
		return *m.Sname
	}
	return ""
}

func (m *InfoResponse_Data) GetStatus() InfoResponse_Status {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return InfoResponse_STOPPED
}

func (m *InfoResponse_Data) GetBindAddr() string {
	if m != nil && m.BindAddr != nil {
		return *m.BindAddr
	}
	return ""
}

func (m *InfoResponse_Data) GetBindPort() int32 {
	if m != nil && m.BindPort != nil {
		return *m.BindPort
	}
	return 0
}

func (m *InfoResponse_Data) GetStartTime() int64 {
	if m != nil && m.StartTime != nil {
		return *m.StartTime
	}
	return 0
}

func (m *InfoResponse_Data) GetSent() int64 {
	if m != nil && m.Sent != nil {
		return *m.Sent
	}
	return 0
}

func (m *InfoResponse_Data) GetReceived() int64 {
	if m != nil && m.Received != nil {
		return *m.Received
	}
	return 0
}

func (m *InfoResponse_Data) GetSentRate() int64 {
	if m != nil && m.SentRate != nil {
		return *m.SentRate
	}
	return 0
}

func (m *InfoResponse_Data) GetReceivedRate() int64 {
	if m != nil && m.ReceivedRate != nil {
		return *m.ReceivedRate
	}
	return 0
}

func (m *InfoResponse_Data) GetErr() string {
	if m != nil && m.Err != nil {
		return *m.Err
	}
	return ""
}

type Response struct {
	Type             *RequestType    `protobuf:"varint,1,req,name=type,enum=message.RequestType" json:"type,omitempty"`
	Err              *Error          `protobuf:"bytes,2,opt,name=err" json:"err,omitempty"`
	Status           *StatusResponse `protobuf:"bytes,3,opt,name=status" json:"status,omitempty"`
	Start            *StartResponse  `protobuf:"bytes,4,opt,name=start" json:"start,omitempty"`
	Stop             *StopResponse   `protobuf:"bytes,5,opt,name=stop" json:"stop,omitempty"`
	Info             *InfoResponse   `protobuf:"bytes,7,opt,name=info" json:"info,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{5} }

func (m *Response) GetType() RequestType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return RequestType_STATUS
}

func (m *Response) GetErr() *Error {
	if m != nil {
		return m.Err
	}
	return nil
}

func (m *Response) GetStatus() *StatusResponse {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *Response) GetStart() *StartResponse {
	if m != nil {
		return m.Start
	}
	return nil
}

func (m *Response) GetStop() *StopResponse {
	if m != nil {
		return m.Stop
	}
	return nil
}

func (m *Response) GetInfo() *InfoResponse {
	if m != nil {
		return m.Info
	}
	return nil
}

func init() {
	proto.RegisterType((*Error)(nil), "message.Error")
	proto.RegisterType((*StatusResponse)(nil), "message.StatusResponse")
	proto.RegisterType((*StatusResponse_Data)(nil), "message.StatusResponse.Data")
	proto.RegisterType((*StartResponse)(nil), "message.StartResponse")
	proto.RegisterType((*StartResponse_Data)(nil), "message.StartResponse.Data")
	proto.RegisterType((*StopResponse)(nil), "message.StopResponse")
	proto.RegisterType((*StopResponse_Data)(nil), "message.StopResponse.Data")
	proto.RegisterType((*InfoResponse)(nil), "message.InfoResponse")
	proto.RegisterType((*InfoResponse_Data)(nil), "message.InfoResponse.Data")
	proto.RegisterType((*Response)(nil), "message.Response")
	proto.RegisterEnum("message.StatusResponse_Status", StatusResponse_Status_name, StatusResponse_Status_value)
	proto.RegisterEnum("message.StartResponse_Status", StartResponse_Status_name, StartResponse_Status_value)
	proto.RegisterEnum("message.StopResponse_Status", StopResponse_Status_name, StopResponse_Status_value)
	proto.RegisterEnum("message.InfoResponse_Status", InfoResponse_Status_name, InfoResponse_Status_value)
}

func init() { proto.RegisterFile("src/skywalker/message/response.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 524 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xa4, 0x54, 0x6d, 0x6e, 0xd3, 0x40,
	0x10, 0x95, 0x3f, 0xf2, 0xe1, 0x89, 0x13, 0x85, 0x55, 0x00, 0x2b, 0x0d, 0xa8, 0x72, 0x41, 0x04,
	0xd4, 0x3a, 0x52, 0x6e, 0x50, 0xa9, 0x15, 0xea, 0x9f, 0x24, 0x72, 0xd2, 0x03, 0x98, 0x78, 0xa9,
	0xa2, 0x12, 0x3b, 0xec, 0x6e, 0x41, 0xbd, 0x07, 0x67, 0xe0, 0x10, 0x70, 0x0f, 0x6e, 0xc0, 0x3f,
	0x0e, 0xc1, 0xec, 0xae, 0xe3, 0x38, 0xd5, 0x46, 0x48, 0xe5, 0x5f, 0x66, 0xf6, 0xe5, 0xcd, 0x9b,
	0xb7, 0xcf, 0x0b, 0xaf, 0x38, 0x5b, 0x8e, 0xf8, 0xed, 0xfd, 0xd7, 0xe4, 0xd3, 0x2d, 0x65, 0xa3,
	0x35, 0xe5, 0x3c, 0xb9, 0xa1, 0x23, 0x46, 0xf9, 0x26, 0xcf, 0x38, 0x8d, 0x36, 0x2c, 0x17, 0x39,
	0x69, 0x14, 0xfd, 0xfe, 0xc9, 0x21, 0xf8, 0xe7, 0x3b, 0xca, 0x85, 0x46, 0x87, 0x3d, 0xa8, 0x5d,
	0x32, 0x96, 0x33, 0xd2, 0x02, 0x67, 0xcd, 0x6f, 0x02, 0xeb, 0xd8, 0x1e, 0x7a, 0xe1, 0x37, 0x1b,
	0x3a, 0x73, 0x91, 0x88, 0x3b, 0x1e, 0x17, 0xe4, 0xe4, 0x1d, 0xb8, 0x69, 0x22, 0x12, 0x04, 0x38,
	0xc3, 0xd6, 0x78, 0x10, 0x15, 0x74, 0xd1, 0x3e, 0x2c, 0xba, 0x40, 0x4c, 0xff, 0xbb, 0x05, 0xae,
	0xfc, 0x41, 0x7c, 0x70, 0xb3, 0x64, 0x4d, 0x35, 0x2b, 0x69, 0x43, 0x6d, 0xa9, 0x4a, 0x7b, 0x5b,
	0x72, 0x55, 0x3a, 0xaa, 0x8c, 0xa0, 0xce, 0x15, 0x57, 0xe0, 0x62, 0xdd, 0x19, 0xbf, 0x3c, 0x34,
	0x42, 0x97, 0xa4, 0x0b, 0xcd, 0x0f, 0xab, 0x2c, 0x3d, 0x4f, 0x53, 0x16, 0xd4, 0x14, 0x43, 0xd1,
	0x99, 0xe5, 0x4c, 0x04, 0x75, 0xec, 0xd4, 0xc8, 0x13, 0xf0, 0x90, 0x93, 0x89, 0xc5, 0x0a, 0xc7,
	0x34, 0xb0, 0xe5, 0xc8, 0x3d, 0x29, 0x63, 0x41, 0x53, 0xed, 0x79, 0x06, 0xf5, 0x82, 0xad, 0x05,
	0x8d, 0xf9, 0x62, 0x3a, 0x9b, 0x5d, 0x5e, 0x74, 0x2d, 0x59, 0xc4, 0xd7, 0x93, 0xc9, 0xd5, 0xe4,
	0x7d, 0xd7, 0x26, 0x1e, 0x3a, 0x14, 0xc7, 0xd3, 0xb8, 0xeb, 0x84, 0x3f, 0x2d, 0x68, 0xcf, 0x25,
	0x5f, 0xe9, 0xca, 0xdb, 0x3d, 0x57, 0x8e, 0xaa, 0x92, 0x77, 0x28, 0x6d, 0xca, 0xcc, 0xe8, 0xc9,
	0x59, 0xb9, 0xb5, 0xad, 0xb6, 0x7e, 0x71, 0x80, 0xa2, 0x94, 0xa9, 0xd4, 0x3b, 0x26, 0xf5, 0xe7,
	0xf1, 0x42, 0xa9, 0x2f, 0x05, 0xdb, 0xd5, 0x45, 0x9c, 0xf0, 0x87, 0x05, 0xfe, 0x5c, 0xe4, 0x9b,
	0x52, 0xfc, 0x70, 0x4f, 0x7c, 0xbf, 0x32, 0x79, 0x07, 0xd2, 0xda, 0xa7, 0x46, 0xed, 0xa7, 0x0f,
	0xb4, 0x0f, 0xcc, 0x0c, 0x26, 0xe9, 0x23, 0xb3, 0xf1, 0x15, 0xe9, 0x6d, 0xf0, 0xae, 0x27, 0x3b,
	0xf1, 0xbf, 0x6c, 0xf0, 0xaf, 0xb2, 0x8f, 0xf9, 0x3f, 0xc5, 0x57, 0x41, 0x5a, 0xfc, 0x9f, 0xc7,
	0xa4, 0xf1, 0xf4, 0x41, 0x1a, 0x07, 0xe6, 0x01, 0xff, 0x97, 0x45, 0x14, 0xc4, 0x69, 0x26, 0x54,
	0x18, 0x1d, 0xf9, 0x17, 0x46, 0x97, 0x74, 0xf5, 0x85, 0xa6, 0x81, 0xb7, 0xed, 0xc8, 0xf3, 0x38,
	0x11, 0x34, 0x00, 0xd5, 0xe9, 0x81, 0xbf, 0xc5, 0xa8, 0x6e, 0xab, 0x9a, 0x69, 0xff, 0x31, 0x99,
	0xfe, 0x6d, 0x41, 0xb3, 0x34, 0x35, 0x04, 0x57, 0xdc, 0x6f, 0xb4, 0x43, 0x9d, 0x71, 0xaf, 0xdc,
	0x39, 0xd6, 0x6f, 0xc6, 0x02, 0xcf, 0xc8, 0x91, 0x1e, 0x66, 0x1f, 0x5b, 0xe8, 0x7b, 0xa7, 0x84,
	0xe8, 0x57, 0xe4, 0x4d, 0x69, 0x9b, 0xa3, 0xce, 0x9f, 0x1f, 0xf8, 0x88, 0xc9, 0x6b, 0xb4, 0x5b,
	0xba, 0x81, 0xf6, 0x4a, 0xdc, 0x33, 0x73, 0xec, 0xc9, 0x09, 0x3a, 0x84, 0x59, 0x42, 0x53, 0x25,
	0xea, 0xa9, 0x31, 0x60, 0x12, 0xb4, 0xc2, 0x4b, 0x41, 0x53, 0xf7, 0x41, 0xd5, 0x9b, 0xfa, 0x1b,
	0x00, 0x00, 0xff, 0xff, 0x82, 0x8d, 0x6b, 0x86, 0x3d, 0x05, 0x00, 0x00,
}
