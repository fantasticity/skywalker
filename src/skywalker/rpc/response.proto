syntax = "proto3";
package rpc;

import "src/skywalker/rpc/request.proto";


/* 出错 */
message Error {
    string msg = 1;
}

message AuthResponse {
    enum Status {
        SUCCESS = 0;
        FAILURE = 1;
    }
    Status status = 1;
}

/* status 命令的返回结果 */
message StatusResponse {
    enum Status {
        STOPPED = 0;
        RUNNING = 1;
        ERROR = 2;
    }
    message Data {
        string name = 1;
        string cname = 2;
        string sname = 3;
        Status status = 4;
        string bindAddr = 5;
        int32 bindPort = 6;
        int64 startTime = 7;
        string err = 8;    /* 当不为空时表示出错 */
    }
    repeated Data data = 1;
}

/* start 命令的返回结果 */
message StartResponse {
    enum Status {
        STARTED = 0;
        ERROR = 1;
        RUNNING = 2;
    }
    message Data {
        string name = 1;
        Status status = 2;
        string err = 3;   /* 当状态是 ERROR 时有效 */
    }
    repeated Data data = 1;
}

message StopResponse {
    enum Status {
        STOPPED = 0;
        ERROR = 1;
        UNRUNNING = 2;
    }
    message Data {
        string name = 1;
        Status status = 2;
        string err = 3;
    }
    repeated Data data = 1;
}

message InfoResponse {
    enum Status {
        STOPPED = 0;
        RUNNING = 1;
        ERROR = 2;
    }
    message Info {
        string key = 1;
        string value = 2;
    }
    message Data {
        string name = 1;
        string cname = 2;
        string sname = 3;
        Status status = 4;
        string bindAddr = 5;
        int32 bindPort = 6;
        int64 startTime = 7;
        int64 sent = 8;
        int64 received = 9;
        int64 sentRate = 10;
        int64 receivedRate = 11;
        repeated Info caInfo = 12;
        repeated Info saInfo = 13;
        string err = 14;    /* 当不为空时表示出错 */
    }
    repeated Data data = 1;
}

message ReloadResponse {
    repeated string unchanged = 1;
    repeated string added = 2;
    repeated string deleted= 3;
    repeated string updated = 4;
}

message QuitResponse {
    enum Status {
        QUITED = 0;
        ERROR = 1;
    }
    Status status = 1;
    uint32 pid = 2;
}

message ClearCacheResponse {
    enum Status {
        SUCCESS = 0;
    }
    Status status = 1;
}

message ListResponse {
    enum Status {
        SUCCESS = 0;
    }
    message Data {
        string name = 1; 
        message Chain {
            string clientAddr = 1;
            string remoteAddr = 2;
            int64 connectedTime = 3;
            int64 closedTime = 4;
        }
        repeated Chain chain = 2;
    }
    Status status = 1;
    repeated Data data = 2;
}

message Response {
    RequestType type = 1;
    Error err = 2;
    AuthResponse auth = 3;
    StatusResponse status = 4;
    StartResponse start = 5;
    StopResponse stop = 6;
    InfoResponse info = 7;
    ReloadResponse reload = 8;
    QuitResponse quit = 9;
    ClearCacheResponse clear = 10;
    ListResponse list = 11;
}
