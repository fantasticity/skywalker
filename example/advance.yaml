# 同时配置多个代理
# 以波浪线开头的代理会被忽略
# 代理配置可以用yaml的“继承”语法来扩展
# 下面例子配置了两个代理，一个ss代理，一个是http转ss代理


# 这是全局的日志配置，如果代理下没有指定日志，则使用全局的
# core是保留字，不能创建一个名叫core的代理
# 现在core中只配置日志log，后面会添加新配置
core:
  log:
    showName: true
    loggers:
    - level: DEBUG
      file: /dev/null	# 指定日志输出的文件
    - level: INFO
      file: STDOUT  # STDOUT和STDERR分别表示标准输出和标准错误输出
    - level: WARN
      file: STDERR
    - level: ERROR
      file: /tmp/skywalker.err

# 通用配置，以波浪线~开头，不会当作一个有效代理处理
~base: &base
  bindAddr: 127.0.0.1
  serverAgent: shadowsocks
  serverConfig:
    method: rc4-md5
    password: abcdefg
    serverPort: 31111
    select: random
    serverAddr[]:
      - serverAddr: ss1.example.com
      - serverAddr: ss2.example.com
      - serverAddr: ss3.example.com

ss:
  << : *base	# 从base继承配置
  bindPort: 12345
  clientAgent: socks
  clientConfig:
    version: 5

http:
  << : *base	# 从base继承配置
  bindPort: 23456
  clientAgent: http

  log:
    loggers:[]		# 自定义日志输出，这里表示不输出任何日志
